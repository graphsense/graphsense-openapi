openapi: 3.0.0
info:
  description: GraphSense API
  title: GraphSense API
  version: 0.4.4
servers:
  - url: 'http://openapi_server:9000'
paths:
  /stats:
    get:
      operationId: get_statistics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stats'
      summary: Get statistics of supported currencies
      tags:
      - general
  /{currency}/blocks:
    get:
      operationId: list_blocks
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/page'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blocks'
      summary: Get all blocks
      tags:
      - blocks
  /{currency}/blocks/{height}:
    get:
      operationId: get_block
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/height'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block'
      summary: Get a block by its height
      tags:
      - blocks
  /{currency}/blocks/{height}/txs:
    get:
      operationId: list_block_txs
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/height'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block_txs'
      summary: Get all blocks (100 per page)
      tags:
      - blocks

  /{currency}/blocks/{height}/txs.csv:
    get:
      operationId: list_block_txs_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/height'
      responses:
        "200":
          description: OK
          content:
            text/csv: 
              schema:
                type: string
      summary: Get all blocks as CSV
      tags:
      - blocks
  /{currency}/addresses/{address}:
    get:
      operationId: get_address_with_tags
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address_with_tags'
      summary: Get an address with tags
      tags:
      - addresses
  /{currency}/addresses/{address}/txs:
    get:
      operationId: list_address_txs
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
        - $ref: '#/components/parameters/page' 
        - $ref: '#/components/parameters/pagesize' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address_txs'
      summary: Get all transactions an address has been involved in
      tags:
      - addresses
  /{currency}/addresses/{address}/tags:
    get:
      operationId: list_address_tags
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag'
      summary: Get attribution tags for a given address
      tags:
      - addresses
  /{currency}/addresses/{address}/tags.csv:
    get:
      operationId: list_address_tags_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
      responses:
        "200":
          description: OK
          content:
            application/csv:
              schema:
                type: string
      summary: Get attribution tags for a given address
      tags:
      - addresses
  /{currency}/addresses/{address}/neighbors:
    get:
      operationId: list_address_neighbors
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
        - $ref: '#/components/parameters/direction' 
        - $ref: '#/components/parameters/page' 
        - $ref: '#/components/parameters/pagesize' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/neighbors'
      summary: Get an addresses' neighbors in the address graph
      tags:
      - addresses
  /{currency}/addresses/{address}/neighbors.csv:
    get:
      operationId: list_address_neighbors_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
        - $ref: '#/components/parameters/direction' 
      responses:
        "200":
          description: OK
          content:
            text/csv:
              schema:
                type: string
      summary: Get an addresses' neighbors in the address graph as CSV
      tags:
      - addresses
  /{currency}/addresses/{address}/entity:
    get:
      operationId: get_address_entity
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity_with_tags'
      summary: Get an address with tags
      tags:
      - addresses
  /{currency}/addresses/{address}/links:
    get:
      operationId: list_address_links
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
        - $ref: '#/components/parameters/neighbor' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/link'
      summary: Get transactions between to addresses 
      tags:
      - addresses
  /{currency}/entities/{entity}:
    get:
      operationId: get_entity_with_tags
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/entity' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity_with_tags'
      summary: Get an entity with tags
      tags:
      - entities
  /{currency}/entities/{entity}/tags:
    get:
      operationId: list_entity_tags
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/entity' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag'
      summary: Get attribution tags for a given entity
      tags:
      - entities
  /{currency}/entities/{entity}/tags.csv:
    get:
      operationId: list_entity_tags_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/entity' 
      responses:
        "200":
          description: OK
          content:
            application/csv:
              schema:
                type: string
      summary: Get attribution tags for a given entity as CSV
      tags:
      - entities
components:
  parameters:
    currency:
      in: path
      name: currency
      required: true
      schema:
        type: string
        format: string
      description: The cryptocurrency (e.g., btc)
      example: 'btc'
    height:
      in: path
      name: height
      required: true
      schema:
        type: integer
        minimum: 1
      description: The block height
      example: 1
    page:
      in: query
      name: page
      required: false
      schema:
        type: string
      description: Resumption token for retrieving the next page
      example: 0400030bff00f07fffff9b00
      x-graphsense-rest-test-example: '' # overrides example
    pagesize:
      in: query
      name: pagesize
      required: false
      schema:
        type: integer
      description: Number of items returned in a single page
      example: 10
    direction:
      in: query
      name: direction
      required: true
      schema:
        type: string
        enum: [in, out]
      description: Incoming or outgoing neighbors
      example: out
    address:
      in: path
      name: address
      required: true
      schema:
        type: string
        format: string
      description: The cryptocurrency address
      example: '1Archive1n2C579dMsAu3iC6tWzuQJz8dN'
    neighbor:
      in: query
      name: neighbor
      required: true
      schema:
        type: string
      description: Neighbor address
      example: '17DfZja1713S3JRWA9jaebCKFM5anUh7GG'
    entity:
      in: path
      name: entity
      required: true
      schema:
        type: integer
        format: int64
      description: The entity ID
      example: '67065'
  schemas:
    stats:
      type: object
      properties:
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/currency_stats'
       # TODO add tools, notes, data_sources?
    currency_stats:
      title: statistics of a cryptocurrency
      type: object
      properties:
        name:
          type: string
        no_blocks:
          format: int64
          type: integer
        no_address_relations:
          format: int64
          type: integer
        no_addresses:
          format: int64
          type: integer
        no_entities:
          format: int64
          type: integer
        no_txs:
          format: int64
          type: integer
        no_labels:
          format: int64
          type: integer
        timestamp:
          format: int64
          type: integer
    block:
      type: object
      properties:
        block_hash:
          type: string
          format: string
        height: 
          $ref: '#/components/schemas/height'
        no_txs: 
          format: int64
          type: integer
        timestamp: 
          format: int64
          type: integer
    block_txs:
      type: object
      properties:
        height: 
          $ref: '#/components/schemas/height'
        txs:
          type: array
          items:
            $ref: '#/components/schemas/block_tx_summary'
    block_tx_summary:
      type: object
      properties:
        tx_hash: 
          type: string
        no_inputs: 
          type: integer
          format: int64
        no_outputs:
          type: integer
          format: int64
        total_input:
          $ref: '#/components/schemas/values'
        total_output:
          $ref: '#/components/schemas/values'
    blocks:
      type: object
      properties:
        next_page: 
          $ref: '#/components/schemas/next_page'
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/block'
    address:
      type: object
      required:
        - address
        - balance
        - first_tx
        - last_tx
        - in_degree
        - out_degree
        - no_incoming_txs
        - no_outgoing_txs
        - total_received
        - total_spent
      properties:
        address: 
          $ref: '#/components/schemas/address_id'
        balance: 
          $ref: '#/components/schemas/values'
        first_tx: 
          $ref: '#/components/schemas/tx_summary'
        last_tx: 
          $ref: '#/components/schemas/tx_summary'
        in_degree: 
          type: integer
          format: int64
        out_degree: 
          type: integer
          format: int64
        no_incoming_txs: 
          type: integer
          format: int64
        no_outgoing_txs: 
          type: integer
          format: int64
        total_received: 
          $ref: '#/components/schemas/values'
        total_spent: 
          $ref: '#/components/schemas/values'
    address_with_tags:
      allOf:
        - $ref: '#/components/schemas/address'
        - type: object
          properties:
            tags:
              type: array
              items:
                $ref: '#/components/schemas/tag'
              description: Tags
    entity:
      type: object
      required:
        - entity
        - balance
        - first_tx
        - last_tx
        - in_degree
        - out_degree
        - no_addresses
        - no_incoming_txs
        - no_outgoing_txs
        - total_received
        - total_spent
      properties:
        entity: 
          $ref: '#/components/schemas/entity_id'
        balance: 
          $ref: '#/components/schemas/values'
        first_tx: 
          $ref: '#/components/schemas/tx_summary'
        last_tx: 
          $ref: '#/components/schemas/tx_summary'
        in_degree: 
          type: integer
          format: int64
        out_degree: 
          type: integer
          format: int64
        no_addresses: 
          type: integer
          format: int64
        no_incoming_txs: 
          type: integer
          format: int64
        no_outgoing_txs: 
          type: integer
          format: int64
        total_received: 
          $ref: '#/components/schemas/values'
        total_spent: 
          $ref: '#/components/schemas/values'
    entity_with_tags:
      allOf:
        - $ref: '#/components/schemas/entity'
        - type: object
          required:
            - tags
          properties:
            tags:
              type: array
              items:
                $ref: '#/components/schemas/tag'
              description: Tags
            tag_coherence:
              type: float
              description: Tag coherence
    address_txs:
      type: object
      properties:
        next_page: 
          $ref: '#/components/schemas/next_page'
        address_txs:
          type: array
          items:
            $ref: '#/components/schemas/address_tx'
    address_tx:
      type: object
      properties:
        address: 
          $ref: '#/components/schemas/address_id'
        height:
          $ref: '#/components/schemas/height'
        timestamp:
          $ref: '#/components/schemas/timestamp'
        tx_hash:
          $ref: '#/components/schemas/tx_hash'
        value: 
          $ref: '#/components/schemas/values'
    tx_summary:
        type: object
        required:
          - height
          - timestamp
          - tx_hash
        properties:
          height: 
            $ref: '#/components/schemas/height'
          timestamp:
            $ref: '#/components/schemas/timestamp'
          tx_hash:
            $ref: '#/components/schemas/tx_hash'
    tag:
        type: object
        required:
          - address
          - label
          - active
          - currency
        properties:
          address:
            $ref: '#/components/schemas/address_id'
          label:
            type: string
            description: Label
          category:
              type: string
              description: Category
          abuse:
              type: string
              description: Abuses
          tagpack_uri:
              type: string
              description: Tagpack URI
          source:
              type: string
              description: Source 
          lastmod:
              type: integer
              format: int32
              description: Last modified
          active:
              type: boolean
              description: whether the address has been ever used 
          currency:
              type: string
              description: Currency
    values:
      type: object
      properties:
        eur:
          type: integer
          format: int64
        usd:
          type: integer
          format: int64
        value:
          type: integer
          format: int64
    next_page:
      type: string
      format: string
    address_id:
      type: string
      description: Address
    entity_id:
      type: string
      description: Entity id
    height:
      type: integer
      format: int64
      minimum: 1
      description: Height
    timestamp:
      type: integer
      format: int64
      description: Timestamp
    tx_hash:
      type: string
      description: Transaction hash
    neighbors:
      type: object
      properties:
        next_page: 
          $ref: '#/components/schemas/next_page'
        neighbors:
          type: array
          items:
            $ref: '#/components/schemas/neighbor'
    neighbor:
      type: object
      required:
        - id
        - node_type
        - labels
        - balance
        - received
        - no_txs
        - estimated_value
      properties:
        id: 
          type: string
          description: address or entity id
        node_type: 
          type: string
          enum: [address, entity]
          description: address or entity
        labels: 
          type: array
          items: 
            type: string
          description: labels
        balance: 
          $ref: '#/components/schemas/values'
        received: 
          $ref: '#/components/schemas/values'
        estimated_value: 
          $ref: '#/components/schemas/values'
        no_txs: 
          type: integer
          format: int32
          description: number of transactions
    link:
        type: object
        required:
            - tx_hash
            - height
            - timestamp
            - input_value
            - output_value
        properties:
          tx_hash: 
            $ref: '#/components/schemas/tx_hash'
          height: 
            $ref: '#/components/schemas/height'
          timestamp: 
            $ref: '#/components/schemas/timestamp'
          input_value:
            $ref: '#/components/schemas/values'
          output_value: 
            $ref: '#/components/schemas/values'


