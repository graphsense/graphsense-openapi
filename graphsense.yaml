openapi: 3.0.0
info:
  description: GraphSense API
  title: GraphSense API
  version: 0.4.5
servers:
  - url: 'http://openapi_server:9000'
paths:
  /stats:
    get:
      operationId: get_statistics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stats'
      summary: Get statistics of supported currencies
      tags:
      - general
  /search:
    get:
      operationId: search
      parameters:
        - $ref: '#/components/parameters/currency_query' 
        - $ref: '#/components/parameters/search_query' 
        - $ref: '#/components/parameters/limit' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/search_result'
      summary: Returns matching addresses, transactions and labels
      tags:
      - general
  /{currency}/blocks:
    get:
      operationId: list_blocks
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/page'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blocks'
      summary: Get all blocks
      tags:
      - blocks
  /eth/blocks:
    get:
      operationId: list_blocks_eth
      parameters:
        - $ref: '#/components/parameters/page'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blocks_eth'
      summary: Get all blocks
      tags:
      - blocks
  /{currency}/blocks/{height}:
    get:
      operationId: get_block
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/height'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block'
      summary: Get a block by its height
      tags:
      - blocks
  /eth/blocks/{height}:
    get:
      operationId: get_block_eth
      parameters:
        - $ref: '#/components/parameters/height'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block_eth'
      summary: Get a ethereum block by its height
      tags:
      - blocks
  /{currency}/blocks/{height}/txs:
    get:
      operationId: list_block_txs
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/height'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block_txs'
      summary: Get block transactions (100 per page)
      tags:
      - blocks
  /{currency}/blocks/{height}/txs.csv:
    get:
      operationId: list_block_txs_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/height'
      responses:
        "200":
          description: OK
          content:
            text/csv: 
              schema:
                type: string
      summary: Get block transactions as CSV
      tags:
      - blocks
  /eth/blocks/{height}/txs:
    get:
      operationId: list_block_txs_eth
      parameters:
        - $ref: '#/components/parameters/height'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/txs_eth'
      summary: Get block transactions (100 per page)
      tags:
      - blocks
  /eth/blocks/{height}/txs.csv:
    get:
      operationId: list_block_txs_csv_eth
      parameters:
        - $ref: '#/components/parameters/height'
      responses:
        "200":
          description: OK
          content:
            text/csv: 
              schema:
                type: string
      summary: Get block transactions as CSV
      tags:
      - blocks
  /{currency}/addresses/{address}:
    get:
      operationId: get_address_with_tags
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address_with_tags'
      summary: Get an address with tags
      tags:
      - addresses
  /{currency}/addresses/{address}/txs:
    get:
      operationId: list_address_txs
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
        - $ref: '#/components/parameters/page' 
        - $ref: '#/components/parameters/pagesize' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address_txs'
      summary: Get all transactions an address has been involved in
      tags:
      - addresses
  /{currency}/addresses/{address}/txs.csv:
    get:
      operationId: list_address_txs_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
      responses:
        "200":
          description: OK
          content:
            text/csv: 
              schema:
                type: string
      summary: Get all transactions an address has been involved in as CSV
      tags:
      - addresses
  /eth/addresses/{address}/txs:
    get:
      operationId: list_address_txs_eth
      parameters:
        - $ref: '#/components/parameters/hex_address' 
        - $ref: '#/components/parameters/page' 
        - $ref: '#/components/parameters/pagesize' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/txs_eth'
      summary: Get all transactions an address has been involved in
      tags:
      - addresses
  /eth/addresses/{address}/txs.csv:
    get:
      operationId: list_address_txs_csv_eth
      parameters:
        - $ref: '#/components/parameters/hex_address' 
      responses:
        "200":
          description: OK
          content:
            text/csv: 
              schema:
                type: string
      summary: Get all transactions an address has been involved in as CSV
      tags:
      - addresses
  /{currency}/addresses/{address}/tags:
    get:
      operationId: list_address_tags
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag'
      summary: Get attribution tags for a given address
      tags:
      - addresses
  /{currency}/addresses/{address}/tags.csv:
    get:
      operationId: list_address_tags_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
      responses:
        "200":
          description: OK
          content:
            application/csv:
              schema:
                type: string
      summary: Get attribution tags for a given address
      tags:
      - addresses
  /{currency}/addresses/{address}/neighbors:
    get:
      operationId: list_address_neighbors
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
        - $ref: '#/components/parameters/direction' 
        - $ref: '#/components/parameters/page' 
        - $ref: '#/components/parameters/pagesize' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/neighbors'
      summary: Get an addresses' neighbors in the address graph
      tags:
      - addresses
  /{currency}/addresses/{address}/neighbors.csv:
    get:
      operationId: list_address_neighbors_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
        - $ref: '#/components/parameters/direction' 
      responses:
        "200":
          description: OK
          content:
            text/csv:
              schema:
                type: string
      summary: Get an addresses' neighbors in the address graph as CSV
      tags:
      - addresses
  /{currency}/addresses/{address}/entity:
    get:
      operationId: get_address_entity
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity_with_tags'
      summary: Get the entity of an address
      tags:
      - addresses
  /{currency}/addresses/{address}/links:
    get:
      operationId: list_address_links
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
        - $ref: '#/components/parameters/neighbor' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/link'
      summary: Get transactions between two addresses 
      tags:
      - addresses
  /{currency}/addresses/{address}/links.csv:
    get:
      operationId: list_address_links_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/address' 
        - $ref: '#/components/parameters/neighbor' 
      responses:
        "200":
          description: OK
          content:
            text/csv:
              schema:
                type: string
      summary: Get transactions between two addresses as CSV
      tags:
      - addresses
  /{currency}/entities/{entity}:
    get:
      operationId: get_entity_with_tags
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/entity' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity_with_tags'
      summary: Get an entity with tags
      tags:
      - entities
  /{currency}/entities/{entity}/tags:
    get:
      operationId: list_entity_tags
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/entity' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag'
      summary: Get attribution tags for a given entity
      tags:
      - entities
  /{currency}/entities/{entity}/tags.csv:
    get:
      operationId: list_entity_tags_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/entity' 
      responses:
        "200":
          description: OK
          content:
            application/csv:
              schema:
                type: string
      summary: Get attribution tags for a given entity as CSV
      tags:
      - entities
  /{currency}/entities/{entity}/neighbors:
    get:
      operationId: list_entity_neighbors
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/entity' 
        - $ref: '#/components/parameters/direction' 
        - $ref: '#/components/parameters/targets' 
        - $ref: '#/components/parameters/page' 
        - $ref: '#/components/parameters/pagesize' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/neighbors'
      summary: Get an entity's neighbors in the entity graph
      tags:
      - entities
  /{currency}/entities/{entity}/neighbors.csv:
    get:
      operationId: list_entity_neighbors_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/entity' 
        - $ref: '#/components/parameters/direction' 
      responses:
        "200":
          description: OK
          content:
            text/csv:
              schema:
                type: string
      summary: Get an entity's neighbors in the entity graph as CSV
      tags:
      - entities
  /{currency}/entities/{entity}/addresses:
    get:
      operationId: list_entity_addresses
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/entity' 
        - $ref: '#/components/parameters/page' 
        - $ref: '#/components/parameters/pagesize' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity_addresses'
      summary: Get an entity's addresses 
      tags:
      - entities
  /{currency}/entities/{entity}/addresses.csv:
    get:
      operationId: list_entity_addresses_csv
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/entity' 
      responses:
        "200":
          description: OK
          content:
            text/csv:
              schema:
                type: string
      summary: Get an entity's addresses as CSV
      tags:
      - entities
  /{currency}/entities/{entity}/search:
    get:
      operationId: search_entity_neighbors
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/entity' 
        - $ref: '#/components/parameters/direction' 
        - $ref: '#/components/parameters/search_key' 
        - $ref: '#/components/parameters/search_value' 
        - $ref: '#/components/parameters/depth' 
        - $ref: '#/components/parameters/breadth' 
        - $ref: '#/components/parameters/skip_num_addresses' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/search_paths'
      summary: Search deeply for matching neighbors
      tags:
      - entities
  /{currency}/txs/{tx_hash}:
    get:
      operationId: get_tx
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/tx_hash' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx'
      summary: Returns details of a specific transaction identified by its hash.
      tags:
        - txs
  /{currency}/txs:
    get:
      operationId: list_txs
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/page' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/txs'
      summary: Returns transactions
      tags:
        - txs
  /{currency}/rates/{height}:
    get:
      operationId: get_exchange_rates
      parameters:
        - $ref: '#/components/parameters/currency' 
        - $ref: '#/components/parameters/height' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rates'
      summary: Returns exchange rate for a given height
      tags:
        - rates
  /tags:
    get:
      operationId: list_tags
      parameters:
        - $ref: '#/components/parameters/currency_query' 
        - $ref: '#/components/parameters/label' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag'
      summary: Returns the tags associated with a given label
      tags:
        - tags
  /tags/taxonomies:
    get:
      operationId: list_taxonomies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/taxonomy'
      summary: Returns the supported taxonomies
      tags:
        - tags
  /tags/taxonomies/{taxonomy}/concepts:
    get:
      operationId: list_concepts
      parameters:
        - $ref: '#/components/parameters/taxonomy' 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/concept'
      summary: Returns the supported concepts of a taxonomy
      tags:
        - tags
components:
  parameters:
    currency:
      in: path
      name: currency
      required: true
      schema:
        type: string
        format: string
      description: The cryptocurrency (e.g., btc)
      example: 'btc'
    currency_query:
      in: query
      name: currency
      required: false
      schema:
        type: string
        format: string
      description: The cryptocurrency (e.g., btc)
      example: 'btc'
    height:
      in: path
      name: height
      required: true
      schema:
        type: integer
        minimum: 1
      description: The block height
      example: 1
    page:
      in: query
      name: page
      required: false
      schema:
        type: string
      description: Resumption token for retrieving the next page
      example: 0400030bff00f07fffff9b00
    pagesize:
      in: query
      name: pagesize
      required: false
      schema:
        type: integer
      description: Number of items returned in a single page
      example: 10
    direction:
      in: query
      name: direction
      required: true
      schema:
        type: string
        enum: [in, out]
      description: Incoming or outgoing neighbors
      example: out
    address:
      in: path
      name: address
      required: true
      schema:
        type: string
        format: string
      description: The cryptocurrency address
      example: '1Archive1n2C579dMsAu3iC6tWzuQJz8dN'
    hex_address:
      in: path
      name: address
      required: true
      schema:
        type: string
        format: string
      description: The cryptocurrency address in hexadecimal representation
      example: '123456'
    neighbor:
      in: query
      name: neighbor
      required: true
      schema:
        type: string
      description: Neighbor address
      example: '17DfZja1713S3JRWA9jaebCKFM5anUh7GG'
    entity:
      in: path
      name: entity
      required: true
      schema:
        type: integer
        format: int64
      description: The entity ID
      example: 67065
    tx_hash:
      in: path
      name: tx_hash
      required: true
      schema:
        type: string
      description: The transaction hash
      example: ab188013
    targets:
      in: query
      name: targets
      required: false
      schema:
        type: array
        items:
          type: integer
          format: int64
      description: Restrict result to given set of comma separated IDs
    search_key:
      in: query
      name: key
      description: "Match neighbors against one and only one of these properties:
        - the category the entity belongs to
        - addresses the entity contains
        - total_received: amount the entity received in total
        - balance: amount the entity holds finally"
      required: true
      schema:
        type: string
        enum: 
          - category
          - addresses
          - total_received
          - balance
      example: category
    search_value:
      in: query
      name: value
      required: true
      description: "If key is
          - category: comma separated list of category names
          - addresses: comma separated list of address IDs
          - total_received/balance: comma separated tuple of (currency, min, max)"
      schema:
        type: array
        items:
          type: string
      example: Miner
    depth:
        in: query
        name: depth
        required: true
        description: How many hops should the transaction graph be searched
        schema:
          type: integer
          format: int32
          maximum: 7
    breadth:
        in: query
        name: breadth
        required: false
        description: How many siblings of each neighbor should be tried
        schema:
          type: integer
          format: int32
          default: 16
    skip_num_addresses:
        in: query
        name: skip_num_addresses
        required: false
        description: Skip entities containing more addresses
        schema:
          type: integer
          format: int32
    label:
      in: query
      name: label
      required: true
      schema:
        type: string
      description: The label of an entity
      example: cimedy
    taxonomy:
      in: path
      name: taxonomy
      required: true
      schema:
        type: string
      description: The taxonomy
      example: foo
    search_query:
      in: query
      name: q
      required: true
      schema:
        type: string
        minLength: 3
        pattern: '^[\w ]+$'
      description: It can be (the beginning of) an address, a transaction or a label
      example: foo
    limit:
      in: query
      name: limit
      required: false
      schema:
        type: integer
      description: Maximum number of search results
      example: 10
  schemas:
    stats:
      type: object
      properties:
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/currency_stats'
        version:
          $ref: '#/components/schemas/stats_version'
        tools:
          type: array
          items:
            $ref: '#/components/schemas/stats_tool'
        tags_source:
          $ref: '#/components/schemas/stats_tags_source'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/stats_note'
    stats_version:
      type: object
      properties:
        nr: 
          type: string
        hash:
          type: string
        timestamp:
          type: string
        file: 
          type: string
    stats_tool:
      type: object
      properties:
        visible_name:
          type: string
        id:
          type: string
        version:
          type: string
        titanium_replayable:
          type: boolean
        responsible_for:
          type: array
          items:
            type: string
    stats_tags_source:
      type: object
      properties:
        visible_name: 
          type: string
        id:
          type: string
        version:
          type: string
        report_uuid:
          type: string
    stats_note:
      type: object
      properties:
        note:
          type: string
    currency_stats:
      title: statistics of a cryptocurrency
      type: object
      properties:
        name:
          type: string
        no_blocks:
          format: int64
          type: integer
        no_address_relations:
          format: int64
          type: integer
        no_addresses:
          format: int64
          type: integer
        no_entities:
          format: int64
          type: integer
        no_txs:
          format: int64
          type: integer
        no_labels:
          format: int64
          type: integer
        timestamp:
          format: int64
          type: integer
        tools:
          type: array
          items:
            type: string
        notes:
          type: array
          items:
            type: string
        data_sources:
          type: array
          items:
            $ref: '#/components/schemas/stats_ledger'
    stats_ledger:
      type: object
      properties:
        visible_name:
          type: string
        id:
          type: string
        version:
          $ref: '#/components/schemas/stats_ledger_version'
        report_uuid:
          type: string
    stats_ledger_version:
      type: object
      properties:
        nr:
          type: string
        timestamp:
          type: string
    block:
      type: object
      properties:
        block_hash:
          type: string
          format: string
        height: 
          $ref: '#/components/schemas/height'
        no_txs: 
          format: int64
          type: integer
        timestamp: 
          format: int64
          type: integer
    block_txs:
      type: object
      properties:
        height: 
          $ref: '#/components/schemas/height'
        txs:
          type: array
          items:
            $ref: '#/components/schemas/block_tx_summary'
    block_tx_summary:
      type: object
      properties:
        tx_hash: 
          type: string
        no_inputs: 
          type: integer
          format: int64
        no_outputs:
          type: integer
          format: int64
        total_input:
          $ref: '#/components/schemas/values'
        total_output:
          $ref: '#/components/schemas/values'
    blocks:
      type: object
      properties:
        next_page: 
          $ref: '#/components/schemas/next_page'
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/block'
    blocks_eth:
      type: object
      properties:
        next_page: 
          $ref: '#/components/schemas/next_page'
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/block_eth'
    address:
      type: object
      required:
        - address
        - balance
        - first_tx
        - last_tx
        - in_degree
        - out_degree
        - no_incoming_txs
        - no_outgoing_txs
        - total_received
        - total_spent
      properties:
        address: 
          $ref: '#/components/schemas/address_id'
        balance: 
          $ref: '#/components/schemas/values'
        first_tx: 
          $ref: '#/components/schemas/tx_summary'
        last_tx: 
          $ref: '#/components/schemas/tx_summary'
        in_degree: 
          type: integer
          format: int64
        out_degree: 
          type: integer
          format: int64
        no_incoming_txs: 
          type: integer
          format: int64
        no_outgoing_txs: 
          type: integer
          format: int64
        total_received: 
          $ref: '#/components/schemas/values'
        total_spent: 
          $ref: '#/components/schemas/values'
    address_with_tags:
      allOf:
        - $ref: '#/components/schemas/address'
        - type: object
          properties:
            tags:
              type: array
              items:
                $ref: '#/components/schemas/tag'
              description: Tags
    entity:
      type: object
      required:
        - entity
        - balance
        - first_tx
        - last_tx
        - in_degree
        - out_degree
        - no_addresses
        - no_incoming_txs
        - no_outgoing_txs
        - total_received
        - total_spent
      properties:
        entity: 
          $ref: '#/components/schemas/entity_id'
        balance: 
          $ref: '#/components/schemas/values'
        first_tx: 
          $ref: '#/components/schemas/tx_summary'
        last_tx: 
          $ref: '#/components/schemas/tx_summary'
        in_degree: 
          type: integer
          format: int64
        out_degree: 
          type: integer
          format: int64
        no_addresses: 
          $ref: '#/components/schemas/no_addresses'
        no_incoming_txs: 
          type: integer
          format: int64
        no_outgoing_txs: 
          type: integer
          format: int64
        total_received: 
          $ref: '#/components/schemas/values'
        total_spent: 
          $ref: '#/components/schemas/values'
    entity_with_tags:
      allOf:
        - $ref: '#/components/schemas/entity'
        - type: object
          required:
            - tags
          properties:
            tags:
              type: array
              items:
                $ref: '#/components/schemas/tag'
              description: Tags
            tag_coherence:
              type: number
              format: float
              description: Tag coherence
    address_txs:
      type: object
      properties:
        next_page: 
          $ref: '#/components/schemas/next_page'
        address_txs:
          type: array
          items:
            $ref: '#/components/schemas/address_tx'
    address_tx:
      type: object
      properties:
        address: 
          $ref: '#/components/schemas/address_id'
        height:
          $ref: '#/components/schemas/height'
        timestamp:
          $ref: '#/components/schemas/timestamp'
        tx_hash:
          $ref: '#/components/schemas/tx_hash'
        value: 
          $ref: '#/components/schemas/values'
    tx_summary:
        type: object
        required:
          - height
          - timestamp
          - tx_hash
        properties:
          height: 
            $ref: '#/components/schemas/height'
          timestamp:
            $ref: '#/components/schemas/timestamp'
          tx_hash:
            $ref: '#/components/schemas/tx_hash'
    tag:
        type: object
        required:
          - address
          - label
          - active
          - currency
        properties:
          address:
            $ref: '#/components/schemas/address_id'
          label:
            $ref: '#/components/schemas/label'
          category:
              type: string
              description: Category
          abuse:
              type: string
              description: Abuses
          tagpack_uri:
              type: string
              description: Tagpack URI
          source:
              type: string
              description: Source 
          lastmod:
              type: integer
              format: int32
              description: Last modified
          active:
              type: boolean
              description: whether the address has been ever used 
          currency:
              type: string
              description: Currency
    values:
      type: object
      properties:
        eur:
          type: integer
          format: int64
        usd:
          type: integer
          format: int64
        value:
          type: integer
          format: int64
    next_page:
      type: string
      format: string
    address_id:
      type: string
      description: Address
    entity_id:
      type: string
      description: Entity id
    height:
      type: integer
      format: int64
      minimum: 1
      description: Height
    timestamp:
      type: integer
      format: int64
      description: Timestamp
    tx_hash:
      type: string
      description: Transaction hash
    no_addresses:
      format: int64
      type: integer
      description: number of contained addresses
    neighbors:
      type: object
      properties:
        next_page: 
          $ref: '#/components/schemas/next_page'
        neighbors:
          type: array
          items:
            $ref: '#/components/schemas/neighbor'
    neighbor:
      type: object
      required:
        - id
        - node_type
        - labels
        - balance
        - received
        - no_txs
        - estimated_value
      properties:
        id: 
          type: string
          description: address or entity id
        node_type: 
          type: string
          enum: [address, entity]
          description: address or entity
        labels: 
          type: array
          items: 
            type: string
          description: labels
        balance: 
          $ref: '#/components/schemas/values'
        received: 
          $ref: '#/components/schemas/values'
        estimated_value: 
          $ref: '#/components/schemas/values'
        no_txs: 
          type: integer
          format: int32
          description: number of transactions
    link:
        type: object
        required:
            - tx_hash
            - height
            - timestamp
            - input_value
            - output_value
        properties:
          tx_hash: 
            $ref: '#/components/schemas/tx_hash'
          height: 
            $ref: '#/components/schemas/height'
          timestamp: 
            $ref: '#/components/schemas/timestamp'
          input_value:
            $ref: '#/components/schemas/values'
          output_value: 
            $ref: '#/components/schemas/values'
    entity_addresses:
      type: object
      properties:
        next_page: 
          $ref: '#/components/schemas/next_page'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/address'
    search_paths:
      type: object
      properties:
        paths:
          type: array
          items:
            $ref: '#/components/schemas/search_paths'
          description: Paths to matching entities
        node:
          $ref: '#/components/schemas/entity_with_tags'
        relation:
          $ref: '#/components/schemas/neighbor'
        matching_addresses:
          type: array
          items:
            $ref: '#/components/schemas/address_with_tags'
    tx:
      type: object
      required:
        - tx_hash
        - coinbase
        - height
        - inputs
        - outputs
        - timestamp
        - total_input
        - total_output
      properties:
        tx_hash:
          $ref: '#/components/schemas/tx_hash'
        coinbase:
          type: boolean
          description: Coinbase transaction flag
        height:
          $ref: '#/components/schemas/height'
        inputs:
          $ref: '#/components/schemas/tx_values'
        outputs:
          $ref: '#/components/schemas/tx_values'
        timestamp: 
          $ref: '#/components/schemas/timestamp'
        total_input:
          $ref: '#/components/schemas/values'
        total_output:
          $ref: '#/components/schemas/values'
    tx_values:
      type: array
      description: Transaction inputs/outputs
      items:
        $ref: '#/components/schemas/tx_value'
    tx_value:
      type: object
      required:
        - address
        - value
      properties:
        address: 
          type: array
          items:
            $ref: '#/components/schemas/address_id'
        value:
          $ref: '#/components/schemas/values'
    txs:
      type: object
      properties:
        next_page: 
          $ref: '#/components/schemas/next_page'
        txs:
          type: array
          items:
            $ref: '#/components/schemas/tx'
    txs_eth:
      type: object
      properties:
        next_page: 
          $ref: '#/components/schemas/next_page'
        txs:
          type: array
          items:
            $ref: '#/components/schemas/tx_eth'
    tx_eth:
      type: object
      required:
        - tx_hash
        - height
        - timestamp
        - values
      properties:
        tx_hash:
          $ref: '#/components/schemas/tx_hash'
        height:
          $ref: '#/components/schemas/height'
        timestamp: 
          $ref: '#/components/schemas/timestamp'
        values:
          $ref: '#/components/schemas/values'
    rates:
      type: object
      properties:
        height: 
          $ref: '#/components/schemas/height'
        rates:
          type: object
          properties:
            eur:
              type: number
              format: float
              description: EUR/Crypto rate
            usd:
              type: number
              format: float
              description: USD/Crypto rate
    taxonomy:
      type: object
      required:
        - taxonomy
        - uri
      properties:
        taxonomy:
          $ref: '#/components/schemas/taxonomy_key'
        uri:
          $ref: '#/components/schemas/uri'
    concept:
      type: object
      required:
        - label
        - taxonomy
        - uri
        - description
        - id
      properties:
        label:
          $ref: '#/components/schemas/label'
        taxonomy:
          $ref: '#/components/schemas/taxonomy_key'
        uri:
          $ref: '#/components/schemas/uri'
        description:
          type: string
          description: Description
        id:
          type: string
          description: ID
    taxonomy_key:
      type: string
      description: Taxonomy
    label:
      type: string
      description: Label
    uri:
      type: string
      description: URI
    search_result:
      type: object
      properties:
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/search_result_by_currency'
        labels:
          $ref: '#/components/schemas/search_result_labels'
    search_result_by_currency:
      type: object
      properties:
        currency: 
          type: string
          description: Currency
        addresses:
          type: array
          description: The list of found addresses
          items: 
            type: string
        txs:
          type: array
          description: The list of found transactions
          items: 
            type: string
    search_result_labels:
      type: array
      description: The list of matching labels
      items:
        type: string
    block_eth:
      type: object
      properties:
        block_hash:
          type: string
          format: string
        height: 
          $ref: '#/components/schemas/height'
        no_txs: 
          format: int64
          type: integer
        timestamp: 
          format: int64
          type: integer
        






